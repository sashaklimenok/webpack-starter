
// В JavaScript есть 7 основных типов.
`
1.number для любых чисел: целочисленных или чисел с плавающей точкой.
2. string для строк. Строка может содержать один или больше символов, нет отдельного символьного типа.
3. boolean для true/false.
4. null для неизвестных значений – отдельный тип, имеющий одно значение null.
5. undefined для неприсвоенных значений – отдельный тип, имеющий одно значение undefined.
6. object для более сложных структур данных.
7. symbol для уникальных идентификаторов.`

//------------------------------------------------------------------------------------------------

`
Кроме обычных чисел, существуют так называемые
«специальные числовые значения», которые относятся 
к этому типу данных: Infinity, -Infinity и NaN.
`
//------------------------------------------------------------------------------------------------

`
Результатом вызова typeof null является "object". Это неверно. 
Это официально признанная ошибка в typeof, сохранённая для совместимости. 
Конечно, null не является объектом. Это специальное значение с отдельным типом. Повторимся, это ошибка в языке.
`



let numberType = 100; //  для любых чисел: целочисленных или чисел с плавающей точкой.
1 / 0  // Infinity
"не число" / 2 + 5  // NaN

let stringType = 'Hello';
let boolianType = true || false;    
let nullType = null;



let undefinedType = undefined; //Оно означает, что «значение не было присвоено».
let objectType = Object
let symbolType = Symbol

//OPERATOR typeof
`
1. Синтаксис оператора: typeof x.
2. Синтаксис функции: typeof(x).
`

